<Application x:Class="OGV2P.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:infra="clr-namespace:Infrastructure.Converters;assembly=Infrastructure">
    <Application.Resources>
        
        <infra:BoolToVisibilityConverter x:Key="BoolToVisibility"
                                         TrueValue="Visible" FalseValue="Collapsed"></infra:BoolToVisibilityConverter>

        <infra:InverseBooleanConverter x:Key="InverseBoolConverter"></infra:InverseBooleanConverter>

        <infra:DoubleToColorConverter x:Key="DoubleToColorConverter"></infra:DoubleToColorConverter>
        
        <Style TargetType="UserControl">
            <Setter Property="MinWidth" Value="400" />
            <Setter Property="MinHeight" Value="400" />
        </Style>

        <Style TargetType="Label">
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="35" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="5"/>
        </Style>
        
        <Style TargetType="ComboBox">
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="35" />
        </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="35" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="35" />
        </Style>

        <Style x:Key="btn" TargetType="Button">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>

            <Setter Property="FontSize" Value="14"/>

            <Setter Property="Padding" Value="12,8"/>

            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Height" Value="35" />

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ButtonBase}">

                        <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">

                            <Grid>

                                <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">

                                    <Border.Background>

                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">

                                            <GradientStop Color="#22000000" Offset="0"/>

                                            <GradientStop Color="#00000000" Offset="1"/>

                                        </LinearGradientBrush>

                                    </Border.Background>

                                </Border>

                                <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            </Grid>

                        </Border>

                        <ControlTemplate.Triggers>

                            <!--default button highlight-->

                            <Trigger Property="Button.IsDefaulted" Value="True">

                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

                            </Trigger>

                            <!--inner drop shadow when pressed / checked-->

                            <Trigger Property="IsPressed" Value="True">

                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>

                            </Trigger>

                            <Trigger Property="ToggleButton.IsChecked" Value="True">

                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>

                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">

                                <Setter Property="Opacity" TargetName="border" Value="0.60"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>


        <Style x:Key="btn-Small" TargetType="Button">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>

            <Setter Property="FontSize" Value="7"/>

            <Setter Property="Padding" Value="6,4"/>

            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Height" Value="22" />

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ButtonBase}">

                        <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">

                            <Grid>

                                <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">

                                    <Border.Background>

                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">

                                            <GradientStop Color="#22000000" Offset="0"/>

                                            <GradientStop Color="#00000000" Offset="1"/>

                                        </LinearGradientBrush>

                                    </Border.Background>

                                </Border>

                                <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            </Grid>

                        </Border>

                        <ControlTemplate.Triggers>

                            <!--default button highlight-->

                            <Trigger Property="Button.IsDefaulted" Value="True">

                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>

                            </Trigger>

                            <!--inner drop shadow when pressed / checked-->

                            <Trigger Property="IsPressed" Value="True">

                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>

                            </Trigger>

                            <Trigger Property="ToggleButton.IsChecked" Value="True">

                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>

                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">

                                <Setter Property="Opacity" TargetName="border" Value="0.60"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

        <Style x:Key="btn-default" TargetType="Button" BasedOn="{StaticResource btn}">

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="#333"/>

                </Setter.Value>

            </Setter>

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="#fff"/>

                </Setter.Value>

            </Setter>

            <Setter Property="BorderBrush">

                <Setter.Value>

                    <SolidColorBrush Color="#ccc"/>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#e6e6e6"/>

                    <Setter Property="BorderBrush" Value="#adadad"/>

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="#e6e6e6"/>

                    <Setter Property="BorderBrush" Value="#adadad"/>

                </Trigger>

                <Trigger Property="ToggleButton.IsChecked" Value="True">

                    <Setter Property="Background" Value="#e6e6e6"/>

                    <Setter Property="BorderBrush" Value="#adadad"/>

                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="btn-primary" TargetType="Button" BasedOn="{StaticResource btn}">

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="#fff"/>

                </Setter.Value>

            </Setter>

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="#428bca"/>

                </Setter.Value>

            </Setter>

            <Setter Property="BorderBrush">

                <Setter.Value>

                    <SolidColorBrush Color="#357ebd"/>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#3071a9"/>

                    <Setter Property="BorderBrush" Value="#285e8e"/>

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="#3071a9"/>

                    <Setter Property="BorderBrush" Value="#285e8e"/>

                </Trigger>

                <Trigger Property="ToggleButton.IsChecked" Value="True">

                    <Setter Property="Background" Value="#3071a9"/>

                    <Setter Property="BorderBrush" Value="#285e8e"/>

                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="btn-primary-small" TargetType="Button" BasedOn="{StaticResource btn-Small}">

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="#fff"/>

                </Setter.Value>

            </Setter>

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="#428bca"/>

                </Setter.Value>

            </Setter>

            <Setter Property="BorderBrush">

                <Setter.Value>

                    <SolidColorBrush Color="#357ebd"/>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#3071a9"/>

                    <Setter Property="BorderBrush" Value="#285e8e"/>

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="#3071a9"/>

                    <Setter Property="BorderBrush" Value="#285e8e"/>

                </Trigger>

                <Trigger Property="ToggleButton.IsChecked" Value="True">

                    <Setter Property="Background" Value="#3071a9"/>

                    <Setter Property="BorderBrush" Value="#285e8e"/>

                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="btn-success" TargetType="Button" BasedOn="{StaticResource btn}">

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="#fff"/>

                </Setter.Value>

            </Setter>

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="#5cb85c"/>

                </Setter.Value>

            </Setter>

            <Setter Property="BorderBrush">

                <Setter.Value>

                    <SolidColorBrush Color="#4cae4c"/>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#449d44"/>

                    <Setter Property="BorderBrush" Value="#398439"/>

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="#449d44"/>

                    <Setter Property="BorderBrush" Value="#398439"/>

                </Trigger>

                <Trigger Property="ToggleButton.IsChecked" Value="True">

                    <Setter Property="Background" Value="#449d44"/>

                    <Setter Property="BorderBrush" Value="#398439"/>

                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="btn-info" TargetType="Button" BasedOn="{StaticResource btn}">

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="#fff"/>

                </Setter.Value>

            </Setter>

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="#5bc0de"/>

                </Setter.Value>

            </Setter>

            <Setter Property="BorderBrush">

                <Setter.Value>

                    <SolidColorBrush Color="#46b8da"/>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#31b0d5"/>

                    <Setter Property="BorderBrush" Value="#269abc"/>

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="#31b0d5"/>

                    <Setter Property="BorderBrush" Value="#269abc"/>

                </Trigger>

                <Trigger Property="ToggleButton.IsChecked" Value="True">

                    <Setter Property="Background" Value="#31b0d5"/>

                    <Setter Property="BorderBrush" Value="#269abc"/>

                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="btn-warning" TargetType="Button" BasedOn="{StaticResource btn}">

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="#fff"/>

                </Setter.Value>

            </Setter>

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="#f0ad4e"/>

                </Setter.Value>

            </Setter>

            <Setter Property="BorderBrush">

                <Setter.Value>

                    <SolidColorBrush Color="#eea236"/>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#ec971f"/>

                    <Setter Property="BorderBrush" Value="#d58512"/>

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="#ec971f"/>

                    <Setter Property="BorderBrush" Value="#d58512"/>

                </Trigger>

                <Trigger Property="ToggleButton.IsChecked" Value="True">

                    <Setter Property="Background" Value="#ec971f"/>

                    <Setter Property="BorderBrush" Value="#d58512"/>

                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="btn-danger" TargetType="Button" BasedOn="{StaticResource btn}">

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="#fff"/>

                </Setter.Value>

            </Setter>

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="#d9534f"/>

                </Setter.Value>

            </Setter>

            <Setter Property="BorderBrush">

                <Setter.Value>

                    <SolidColorBrush Color="#d43f3a"/>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#c9302c"/>

                    <Setter Property="BorderBrush" Value="#ac2925"/>

                </Trigger>

                <Trigger Property="IsPressed" Value="True">

                    <Setter Property="Background" Value="#c9302c"/>

                    <Setter Property="BorderBrush" Value="#ac2925"/>

                </Trigger>

                <Trigger Property="ToggleButton.IsChecked" Value="True">

                    <Setter Property="Background" Value="#c9302c"/>

                    <Setter Property="BorderBrush" Value="#ac2925"/>

                </Trigger>

            </Style.Triggers>

        </Style>

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle SnapsToDevicePixels="true" Margin="4" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrush}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,0,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="ShowShine">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HideShine">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border CornerRadius="5,5,5,5" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" x:Name="border" BorderBrush="#FFFFFFFF">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform AngleX="0" AngleY="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border Background="{TemplateBinding Background}" CornerRadius="5,5,5,5" x:Name="border1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="0.5*"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" CornerRadius="5,5,0,0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#00FFFFFF" Offset="0"/>
                                                <GradientStop Color="#7EFFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Border Grid.Row="1" Opacity="0" x:Name="Shine" Width="Auto" Height="Auto" CornerRadius="0,0,5,5" Margin="1,0,-1,0" Background="{TemplateBinding BorderBrush}"/>
                                    <ContentPresenter VerticalAlignment="Center"  Grid.RowSpan="2" HorizontalAlignment="Center" x:Name="contentPresenter"/>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border1" Value="0.5"/>
                                <Setter Property="Opacity" TargetName="border" Value="1"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform" TargetName="border">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HideShine}" x:Name="HideShine_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="ShowShine_BeginStoryboard" Storyboard="{StaticResource ShowShine}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
